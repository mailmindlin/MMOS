/*
 * GPIOREG.h
 *
 *  Created on: Apr 16, 2015
 *      Author: wfeehery17
 */

#ifndef IO_GPIO_GPIOREG_H_
#define IO_GPIO_GPIOREG_H_
namespace Peripherals {
typedef volatile uint32_t		REG32RW;
typedef volatile const uint32_t	REG32RO;
typedef volatile uint32_t		REG32WO;
typedef volatile void*			RESRV32;
struct _GPREGS {
	REG32RW GPFSEL0		: 32;
	REG32RW GPFSEL1		: 32;
	REG32RW GPFSEL2		: 32;
	REG32RW GPFSEL3		: 32;
	REG32RW GPFSEL4		: 32;
	REG32RW GPFSEL5		: 32;
	RESRV32 RESERVED0	: 32;
	REG32WO GPSET0		: 32;
	REG32WO GPSET1		: 32;
	RESRV32 RESERVED1	: 32;
	REG32WO GPCLR0		: 32;
	REG32WO GPCLR1		: 32;
	RESRV32 RESERVED2	: 32;
	REG32RO GPLEV0		: 32;
	REG32RO GPLEV1		: 32;
	RESRV32 RESERVED3	: 32;
	REG32RW GPEDS0		: 32;
	REG32RW GPEDS1		: 32;
	RESRV32 RESERVED4	: 32;
	REG32RW GPREN0		: 32;
	REG32RW GPREN1		: 32;
	RESRV32 RESERVED5	: 32;
	REG32RW GPFEN0		: 32;
	REG32RW GPFEN1		: 32;
	RESRV32 RESERVED6	: 32;
	REG32RW GPHEN0		: 32;
	REG32RW GPHEN1		: 32;
	RESRV32 RESERVED7	: 32;
	REG32RW GPLEN0		: 32;
	REG32RW GPLEN1		: 32;
	RESRV32 RESERVED8	: 32;
	REG32RW GPAREN0		: 32;
	REG32RW GPAREN1		: 32;
	RESRV32 RESERVED9	: 32;
	REG32RW GPAFEN0		: 32;
	REG32RW GPAFEN1		: 32;
	RESRV32 RESERVEDA	: 32;
	REG32RW GPPUD		: 32;
	REG32RW GPPUDCLK0	: 32;
	REG32RW GPPUDCLK1	: 32;
	RESRV32 RESERVEDB	: 32;
	REG32RW TEST		: 32;
};
extern "c" const struct _GPREGS* GPREGS = (_GPREGS*)0x20200000;
}
#endif /* IO_GPIO_GPIOREG_H_ */
